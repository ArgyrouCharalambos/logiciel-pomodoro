import { AuthorizerResponse, BouncerAbility, BouncerAuthorizer } from './types.js';
/**
 * Abilities builder exposes a chainable API to fluently create an object
 * of abilities by chaining the ".define" method.
 */
export declare class AbilitiesBuilder<Abilities extends Record<string, BouncerAbility<any>>> {
    abilities: Abilities;
    constructor(abilities: Abilities);
    /**
     * Helper to convert a user defined authorizer function to a bouncer ability
     */
    define<Name extends string, Authorizer extends BouncerAuthorizer<any>>(name: Name, authorizer: Authorizer, options?: {
        allowGuest: boolean;
    }): AbilitiesBuilder<Abilities & { [K in Name]: Authorizer extends (user: infer User, ...args: infer Args) => AuthorizerResponse ? {
        allowGuest: false;
        original: Authorizer;
        execute(user: User | null, ...args: Args): AuthorizerResponse;
    } : never; }>;
}
