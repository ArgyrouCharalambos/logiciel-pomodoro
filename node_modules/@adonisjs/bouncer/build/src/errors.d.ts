import { Exception } from '@poppinss/utils';
import type { HttpContext } from '@adonisjs/core/http';
import type { AuthorizationResponse } from './response.js';
/**
 * AuthorizationException is raised by bouncer when an ability or
 * policy denies access to a user for a given resource.
 */
declare class AuthorizationException extends Exception {
    response: AuthorizationResponse;
    message: string;
    status: number;
    code: string;
    /**
     * Error identifier to lookup translation message
     */
    identifier: string;
    constructor(response: AuthorizationResponse, options?: ErrorOptions & {
        code?: string;
        status?: number;
    });
    /**
     * Returns the message to be sent in the HTTP response.
     * Feel free to override this method and return a custom
     * response.
     */
    getResponseMessage(ctx: HttpContext): string;
    handle(_: AuthorizationException, ctx: HttpContext): Promise<void>;
}
export declare const E_AUTHORIZATION_FAILURE: typeof AuthorizationException;
export {};
